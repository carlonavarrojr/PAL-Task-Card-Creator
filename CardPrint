#!/bin/bash
# Program is for printing the Airbus Card with modified headers 
# User should be ready with a txt list of the cards to be printe

# Variables

actype=$1
TailNumber=$2
WODate=$3
Station=$4
WONumber=$5
pathtoOutput=$6
ListOfCards=$7

#echo $actype, $TailNumber, $WODate, $Station, $WONumber, $pathtoOutput, $ListOfCards

if [ -z "$TailNumber" ] 
	then
		TailNumber="        "
fi 

if [ -z "$WODate" ] 
	then
		WODate="           "
fi 

if [ -z "$Station" ] 
	then
		Station="      "
fi 

if [ -z "$pathtoOutput" ] 
	then
		pathtoOutput="."
fi 


#cleanup
if [ ! -d "./.tempcard" ];
then
   echo "Making Temp folder"
   mkdir ./.tempcard
fi
rm ./.tempcard/*.rtf 2> /dev/null
rm ./.tempcard/*.pdf 2> /dev/null
rm ./.tempcard/*.sgm 2> /dev/null
rm ./.tempcard/printerror.txt 2> /dev/null

source CardVariables

# PAL Variables
#pathtoFinalCards="/home/mpla/Documents/SPLITpdf/AIRBUS CARDS/$actype/$actype FINAL CARDS"
#pathtoGraphRef="/home/mpla/Documents/AirbusCardCreator/CGMFiles/$actype"
#pathtoPDFAttach="/home/mpla/Documents/AirbusCardCreator/CGMFiles/PDFATTACH"
#StampFile="/home/mpla/Documents/AirbusCardCreator/CGMFiles/STAMP/$actypeSTAMP.pdf"
#SysFiles="/home/mpla/Documents/AirbusCardPrint"

# Carlo Variables
#pathtoFinalCards="/media/carlo/DATA/AircraftEngineering/MTC/$actype/$actype FINAL CARDS"
#pathtoGraphRef="/media/carlo/DATA/AircraftEngineering/MTC/GRAPHREF"
#pathtoPDFAttach="/media/carlo/DATA/AircraftEngineering/MTC/PDFATTACH"
#StampFile="/media/carlo/DATA/AircraftEngineering/MTC/STAMP/A320STAMP.pdf"
#SysFiles="/media/carlo/DATA/AircraftEngineering/PAL Task Card Creation"

cp "$ListOfCards" ./.tempcard/templist.txt

# Check all cards available at list
cat ./.tempcard/templist.txt | while read filename; do
     if [ ! -f "$pathtoFinalCards/$filename" ]
	then
	echo "$filename - No Final Card" >> ./.tempcard/printerror.txt 
	grep -v "$filename" ./.tempcard/templist.txt > ./.tempcard/templist2.txt
	rm ./.tempcard/templist.txt
	mv ./.tempcard/templist2.txt ./.tempcard/templist.txt
     fi
done


# Start Card Making
# Copy Cards to temp
cat ./.tempcard/templist.txt | xargs -I# cp "$pathtoFinalCards/#" "./.tempcard/"


#Modify Headers
cat ./.tempcard/templist.txt | while read filename; do
cat  ./.tempcard/$filename | sed "s/WODATE=\"\"/WODATE=\"${WODate}\"/" | sed "s/TAIL=\"\"/TAIL=\"${TailNumber}\"/" | sed "s/STATION=\"\"/STATION=\"${Station}\"/" | sed "s/WO=\"\"/WO=\"${WONumber}\"/"  > ./.tempcard/t$filename
rm ./.tempcard/$filename
mv ./.tempcard/t$filename ./.tempcard/$filename
done

#Print to RTF
echo "Printing to RTF"

cat ./.tempcard/templist.txt | while read filename; do
# Openjade Program Call
filenamertf=`echo $filename | sed 's/.sgm/.rtf/'`


openjade -t rtf -c "$SysFiles/catalog" -d "$SysFiles/CARD.dsl" -o ./.tempcard/$filenamertf ./.tempcard/$filename &> openjade.log

# Change footer of rtf file

cat ./.tempcard/$filenamertf | sed "s/footery0/footery720/g" > ./.tempcard/t$filenamertf
rm ./.tempcard/$filenamertf 
mv ./.tempcard/t$filenamertf ./.tempcard/$filenamertf

done

#Print to PDF

cat ./.tempcard/templist.txt | while read filename; do
filenamertf=`echo $filename | sed 's/.sgm/.rtf/'`
filenamepdf=`echo $filename | sed 's/.sgm/.pdf/'`

libreoffice --pt PDF ./.tempcard/$filenamertf &
#ooffice -p ./.tempcard/$filenamertf
# wait for process to finish
pids="$pids $!"
echo "Printing $filenamepdf to PDF"
wait $pids
pids=""
while [ ! -f "$HOME/PDF/$filenamepdf" ] ; do
	sleep 0.5
done

sleep 2
mv "$HOME/PDF/$filenamepdf" ./.tempcard/

pdftk ./.tempcard/$filenamepdf stamp "$StampFile" output ./.tempcard/t$filenamepdf &
pids="$pids $!"
wait $pids
pids=""
while [ ! -f "./.tempcard/t$filenamepdf" ] ; do
	sleep 0.5
done

sleep 2
rm ./.tempcard/$filenamepdf
mv ./.tempcard/t$filenamepdf ./.tempcard/$filenamepdf


# Attach Graphic References 

grep "<GRAPHIC " ./.tempcard/$filename  | sed "s/<GRAPHIC /\n<GRAPHIC /g" | sort -u > graphlist.txt
grep -Po "GNBR=\".*?\"" graphlist.txt | sed "s/GNBR=\"//g" | sed "s/\"//" | sort -u > graphlistbare.txt
rm graphlist.txt

cat graphlistbare.txt | while read graphicref; do

if [ -f "$pathtoGraphRef/$graphicref.pdf" ] 
	then

	pdftk ./.tempcard/$filenamepdf $pathtoGraphRef/$graphicref.pdf cat output ./.tempcard/2$filenamepdf &
pids="$pids $!"
	wait $pids
	pids=""
	while [ ! -f "./.tempcard/2$filenamepdf" ] ; do
		sleep 0.5
	done

	sleep 2
	rm ./.tempcard/$filenamepdf
	mv ./.tempcard/2$filenamepdf ./.tempcard/$filenamepdf


else 
	echo -e "Error $filename: Graphic File $graphicref not found"
	echo "$filenamepdf - Graphic File" >> ./.tempcard/printerror.txt
fi 

done
rm graphlistbare.txt 2> /dev/null


# Attach pdf attach
grep "<PDFATTACH>" ./.tempcard/$filename  | sed "s#<PDFATTACH>#\n<PDFATTACH>#g" | sed "s#</PDFATTACH>#</PDFATTACH>\n#g" | sort -u > pdfattlist.txt
grep "^<PDFATTACH>" pdfattlist.txt  | sed "s#<PDFATTACH>##g" | sed "s#</PDFATTACH>##g" | sort -u > pdfattlistt.txt
rm pdfattlist.txt

cat pdfattlistt.txt | while read pdfattref; do

if [ -f "$pathtoPDFAttach/$pdfattref" ] 
	then

	pdftk ./.tempcard/$filenamepdf $pathtoPDFAttach/$pdfattref cat output ./.tempcard/2$filenamepdf &
pids="$pids $!"
	wait $pids
	pids=""
	while [ ! -f "./.tempcard/2$filenamepdf" ] ; do
		sleep 0.5
	done

	sleep 2
	rm ./.tempcard/$filenamepdf
	mv ./.tempcard/2$filenamepdf ./.tempcard/$filenamepdf


else 
	echo -e "Error $filename: PDF Attach $pdfattref not found"
	echo "$filenamepdf - PDF Attach" >> ./.tempcard/printerror.txt
fi 
	
done
rm pdfattlistt.txt 2> /dev/null

#put barcode
cardno=`echo $filename | sed 's/.sgm//'`
barcode -b "$cardno" -o ./.tempcard/barcode.ps -u cm -g 8x0.7+2+0
ps2pdf ./.tempcard/barcode.ps ./.tempcard/barcode.pdf
pdftk ./.tempcard/$filenamepdf stamp ./.tempcard/barcode.pdf output ./.tempcard/2$filenamepdf
	wait $pids
	pids=""
	while [ ! -f "./.tempcard/2$filenamepdf" ] ; do
		sleep 0.5
	done

rm ./.tempcard/$filenamepdf
mv ./.tempcard/2$filenamepdf ./.tempcard/$filenamepdf
rm ./.tempcard/barcode.ps
rm ./.tempcard/barcode.pdf

mv ./.tempcard/$filenamepdf $pathtoOutput
#------------------------------------

done   # Printing Card in List


# remove all cards under print error
if [ -f ./.tempcard/printerror.txt ] 
	then
		cat ./.tempcard/printerror.txt | sort -u > ./.tempcard/printerrorr.txt
		rm ./.tempcard/printerror.txt
		echo ""
		# remove problematic cards
		cat ./.tempcard/printerrorr.txt | while read error ; do
		card=`echo $error | awk -F ' ' '{print $1}'`
		rm $pathtoOutput/$card		
		
		done

		echo -e "Printed Cards with Error:"
		cat ./.tempcard/printerrorr.txt
		# rm ./.tempcard/printerrorr.txt # either remove the print error list or make a copy to the output path 
		mv ./.tempcard/printerrorr.txt $pathtoOutput
	else
		echo -e "All Cards Printed Successfully!"
	fi


rm ./.tempcard/*.sgm
rm ./.tempcard/*.rtf
rm openjade.log
rm ./.tempcard/templist.txt
rmdir ./.tempcard

